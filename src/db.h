/**********************************************************************
 * Copyright 2013 Georg Rudoy <0xd34df00d@gmail.com>
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 **********************************************************************/

#pragma once

#include <memory>
#include <unordered_map>
#include <unordered_set>
#include <string>
#include <stdexcept>
#include <boost/optional.hpp>
#include "operation.h"
#include "item.h"

namespace mongo
{
	class DBClientConnection;
}

namespace Laretz
{
	class DBError : public std::runtime_error
	{
	public:
		DBError (const std::string&);
		~DBError () throw ();
	};

	class DB
	{
		const std::string m_dbPrefix;
		const std::string m_svcPrefix;
		const std::shared_ptr<mongo::DBClientConnection> m_conn;
	public:
		DB (const std::string&);

		std::unordered_set<std::string> enumerateItems (uint64_t after = 0, const std::string& parentId = std::string ()) const;
		boost::optional<Item> loadItem (const std::string& id);

		uint64_t getSeqNum (const std::string& id);
		void incSeqNum (const std::string& id);

		void addItem (const Item&);
		void modifyItem (const Item&);
		void removeItem (const std::string& id);
	private:
		boost::optional<std::string> getParentId (const std::string&) const;
		std::string getNamespace (const std::string&) const;
	};
}
